@model CmsShoppingCart.Models.ViewModel.ProductVM

@{
    ViewBag.Title = "EditProduct";
}

<h2>EditProduct</h2>

<div>
    @Html.ActionLink("Back to Products", "Products")
</div>

<style>
    input#ImageName{
        display:none;
    }
</style>

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>

}
 
@using (Html.BeginForm("EditProduct", "Shop",FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProductVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Category">Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Categories", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <label class="control-label col-md-2" for="Image">Add Images</label>
            @Html.EditorFor(model=>model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="/Images/Uploads/Products/@Model.Id/Thumbs/@Model.ImageName" />
                <br />
                <br />
                <img src="#" id="imgpreview" />
                <br /> <br />
                <div class="col-md-10">
                    <input type="file" name="file" id="ImageUpload" />
                </div>
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Product" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />
@if (!Model.GalaryImages.Any())
{

    <h3>There are no Gallery Images</h3>
}
<form action="/Admin/Shop/GalleryImages" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm" >
    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit"  value="upload" />
    </div>
</form>

@foreach(var image in Model.GalaryImages)
{
    <div style="display:inline-block; margin-right:50px;">
        <img src="/Images/Uploads/Products/@Model.Id/Gallery/Thumbs/@image"  />
        @Html.ActionLink("delete","DeleteImage","Shop", new { @class ="deleteimage", @data_name= image})
        @*@Html.ActionLink("Delete", "DeleteProduct",  new { @class = "deleteimage" })*@


    </div>
}
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/scripts/dropzone/dropzone.css" rel="stylesheet" />
@section Scripts
{
<script src="~/scripts/dropzone/dropzone.js"></script>

    <script>
 $(function () {

    function readUrl(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                 $("img#imgpreview").attr("src", e.target.result).width(200).height(200);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

     $('#ImageUpload').change(function () {


        readUrl(this);
     });

     Dropzone.options.dropzoneForm = {
         acceptedFiles: "image/*",
         init: function () {
             this.on("complete", function (file) {
                 if (this.getUploadingFiles().lenght === 0 && this.getQueuedFiles().lenght === 0) {
                     location.reload();
                 }
             });
             this.on("sending", function (file, xhr, formData) {
                 formData.append("Id", @Model.Id);
             });
         }

     }

     //Delete

     $("a.deleteimage").click(function (e) {
         e.preventDefault();

         if(!confirm("comfirm deletion")) return false

         var $this =$(this);
         var url = "/admin/shop/DeleteImage";
         var imageName = $this.data("name");

         $.post(url, { "Id": @Model.Id, imageName :imageName},function (data) {
             $this.parent().fadeOut("fast");
         });
     });

        });

    </script>


}




